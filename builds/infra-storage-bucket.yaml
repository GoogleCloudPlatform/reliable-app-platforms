# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-storage-bucket
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# Create GCS storage bucket
# Docs:
# 1. Config Connector resource -> https://cloud.google.com/config-connector/docs/reference/resource-docs/storage/storagebucket
- name: "gcr.io/cloud-builders/gcloud"
  id: "00-infra-storage-bucket"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      export PROJECT_NUMBER=$(gcloud projects describe ${_PROJECT_ID} --format 'value(projectNumber)')
      echo -e "PROJECT_NUMBER is $${PROJECT_NUMBER}"
      git config --global user.email "cloudbuild-ci@cloudbuild.gserviceaccount.com"
      git config --global user.name "cloudbuild-ci"
      gcloud source repos clone infrastructure --project=${_PROJECT_ID}
      mkdir -p infrastructure/storage
      sed -e "s/PROJECT_ID/${_PROJECT_ID}/" storage/storage-bucket.yaml_tmpl > storage/storage-bucket.yaml
      cp -r storage/storage-bucket.yaml infrastructure/storage/storage-bucket.yaml
      cd infrastructure
      git add . && git commit -am "Create GCS bucket"
      git push
- name: "gcr.io/cloud-builders/gcloud"
  id: "01-push-vars-to-gcs-bucket"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      while [[ $(gcloud --project ${_PROJECT_ID} anthos config controller describe config-controller --location=$${KCC_REGION} --format='value(state)') != "RUNNING" ]]; do
        echo "Waiting for config controller cluster to be RUNNING."
        sleep 5
      done
      gcloud anthos config controller get-credentials config-controller --location=$${KCC_REGION} --project=${_PROJECT_ID}
      until [[ "$(kubectl -n config-control get storagebucket | grep ${_PROJECT_ID})" ]]; do echo "sleeping for 3secs" && sleep 3; done
      kubectl -n config-control wait storagebucket ${_PROJECT_ID} --for=condition=Ready --timeout=10m
      gsutil cp -r vars.sh gs://${_PROJECT_ID}/vars.sh