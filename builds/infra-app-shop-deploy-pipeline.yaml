# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - app-cicd-shop-deploy-pipelines
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
  _PIPELINE_LOCATION: "us-central1"
steps:
# Create ad Cloud Deploy pipeline
- name: gcr.io/cloud-builders/gcloud
  id: '00-shop-deploy-pipelines'
  dir: infra
  env:
  - 'SERVICES=shop-ad shop-cart shop-checkout shop-currency shop-email shop-frontend shop-loadgenerator shop-payment shop-productcatalog shop-recommendation shop-shipping shop-redis'
  entrypoint: bash
  args: 
    - -c
    - |
      source vars.sh
      for SERVICE in $${SERVICES}; do
        sed -e "s/SERVICE/$${SERVICE}/" \
        -e "s/GKE_DEV1_NAME/$${GKE_DEV1_NAME}/" \
        -e "s/GKE_DEV1_LOCATION/$${GKE_DEV1_LOCATION}/"  \
        -e "s/GKE_DEV2_NAME/$${GKE_DEV2_NAME}/" \
        -e "s/GKE_DEV2_LOCATION/$${GKE_DEV2_LOCATION}/"  \
        -e "s/GKE_DEV3_NAME/$${GKE_DEV3_NAME}/" \
        -e "s/GKE_DEV3_LOCATION/$${GKE_DEV3_LOCATION}/"  \
        -e "s/GKE_DEV4_NAME/$${GKE_DEV4_NAME}/" \
        -e "s/GKE_DEV4_LOCATION/$${GKE_DEV4_LOCATION}/"  \
        -e "s/GKE_DEV5_NAME/$${GKE_DEV5_NAME}/" \
        -e "s/GKE_DEV5_LOCATION/$${GKE_DEV5_LOCATION}/"  \
        -e "s/GKE_DEV6_NAME/$${GKE_DEV6_NAME}/" \
        -e "s/GKE_DEV6_LOCATION/$${GKE_DEV6_LOCATION}/"  \
        -e "s/GKE_PROD1_NAME/$${GKE_PROD1_NAME}/" \
        -e "s/GKE_PROD1_LOCATION/$${GKE_PROD1_LOCATION}/"  \
        -e "s/GKE_PROD2_NAME/$${GKE_PROD2_NAME}/" \
        -e "s/GKE_PROD2_LOCATION/$${GKE_PROD2_LOCATION}/"  \
        -e "s/GKE_PROD3_NAME/$${GKE_PROD3_NAME}/" \
        -e "s/GKE_PROD3_LOCATION/$${GKE_PROD3_LOCATION}/"  \
        -e "s/GKE_PROD4_NAME/$${GKE_PROD4_NAME}/" \
        -e "s/GKE_PROD4_LOCATION/$${GKE_PROD4_LOCATION}/"  \
        -e "s/GKE_PROD5_NAME/$${GKE_PROD5_NAME}/" \
        -e "s/GKE_PROD5_LOCATION/$${GKE_PROD5_LOCATION}/"  \
        -e "s/GKE_PROD6_NAME/$${GKE_PROD6_NAME}/" \
        -e "s/GKE_PROD6_LOCATION/$${GKE_PROD6_LOCATION}/"  \
        -e "s/PROJECT_ID/${_PROJECT_ID}/" \
        ./deploy/deliverypipelines/g-service-deploy-pipeline.yaml_tmpl > g-$${SERVICE}-deploy-pipeline.yaml
        sed -e "s/SERVICE/$${SERVICE}/" \
        -e "s/GKE_DEV1_NAME/$${GKE_DEV1_NAME}/" \
        -e "s/GKE_DEV1_LOCATION/$${GKE_DEV1_LOCATION}/"  \
        -e "s/GKE_DEV2_NAME/$${GKE_DEV2_NAME}/" \
        -e "s/GKE_DEV2_LOCATION/$${GKE_DEV2_LOCATION}/"  \
        -e "s/GKE_PROD1_NAME/$${GKE_PROD1_NAME}/" \
        -e "s/GKE_PROD1_LOCATION/$${GKE_PROD1_LOCATION}/"  \
        -e "s/GKE_PROD2_NAME/$${GKE_PROD2_NAME}/" \
        -e "s/GKE_PROD2_LOCATION/$${GKE_PROD2_LOCATION}/"  \
        -e "s/PROJECT_ID/${_PROJECT_ID}/" \
        ./deploy/deliverypipelines/apz-service-deploy-pipeline.yaml_tmpl > apz-$${SERVICE}-deploy-pipeline.yaml
        echo -e "Printing $${SERVICE} global deploy pipeline manifest..."
        cat g-$${SERVICE}-deploy-pipeline.yaml
        echo -e "Printing $${SERVICE} active-passive zone deploy pipeline manifest..."
        cat apz-$${SERVICE}-deploy-pipeline.yaml
        export G_DEPLOYMENT_PIPELINE=$(gcloud --project=${_PROJECT_ID} deploy delivery-pipelines list --region=${_PIPELINE_LOCATION} --format='value(name)' --filter="name~g-$${SERVICE}-deploy-pipeline")
        [[ "$${G_DEPLOYMENT_PIPELINE}" ]] && echo -e "$${SERVICE} Cloud Deploy pipeline exists. Exiting..." && exit 0
        gcloud --project=${_PROJECT_ID} deploy apply --file g-$${SERVICE}-deploy-pipeline.yaml --region=${_PIPELINE_LOCATION}
        export APZ_DEPLOYMENT_PIPELINE=$(gcloud --project=${_PROJECT_ID} deploy delivery-pipelines list --region=${_PIPELINE_LOCATION} --format='value(name)' --filter="name~apz-$${SERVICE}-deploy-pipeline")
        [[ "$${APZ_DEPLOYMENT_PIPELINE}" ]] && echo -e "$${SERVICE} Cloud Deploy pipeline exists. Exiting..." && exit 0
        gcloud --project=${_PROJECT_ID} deploy apply --file apz-$${SERVICE}-deploy-pipeline.yaml --region=${_PIPELINE_LOCATION}
      done
