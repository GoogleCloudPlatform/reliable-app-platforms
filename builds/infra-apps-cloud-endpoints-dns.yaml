# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-apps-cloud-endpoints-dns
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# Create Cloud Endpoints DNS for all apps
# Docs:
# 1. Configuring DNS on the cloud.goog domain -> https://cloud.google.com/endpoints/docs/openapi/cloud-goog-dns-configure
- name: "gcr.io/cloud-builders/gcloud"
  id: "00-infra-apps-cloud-endpoints-dns-dev"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      gsutil cp -r gs://${_PROJECT_ID}/vars.sh infra-vars.sh
      cat infra-vars.sh
      source infra-vars.sh
      while [[ $(gcloud --project ${_PROJECT_ID} anthos config controller describe config-controller --location=$${KCC_REGION} --format='value(state)') != "RUNNING" ]]; do
        echo "Waiting for config controller cluster to be RUNNING."
        sleep 5
      done
      gcloud anthos config controller get-credentials config-controller --location=$${KCC_REGION} --project=${_PROJECT_ID}
      kubectl -n config-control wait computefirewall allow-all-10 --for=condition=Ready
      kubectl -n config-control wait computeaddress dev-mci --for=condition=Ready
      export DEV_MCI_GCLB_IP=$(kubectl -n config-control get computeaddress dev-mci -ojsonpath={'.spec.address'})
      echo -e "DEV_MCI_GCLB_IP is $${DEV_MCI_GCLB_IP}"
      cat <<EOF > dev-bank-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${DEV_BANK_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${DEV_BANK_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${DEV_MCI_GCLB_IP}"
      EOF
      cat <<EOF > dev-shop-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${DEV_SHOP_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${DEV_SHOP_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${DEV_MCI_GCLB_IP}"
      EOF
      cat <<EOF > dev-whereami-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${DEV_WHEREAMI_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${DEV_WHEREAMI_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${DEV_MCI_GCLB_IP}"
      EOF
      gcloud --project=${_PROJECT_ID} endpoints services deploy dev-bank-openapi.yaml
      gcloud --project=${_PROJECT_ID} endpoints services deploy dev-shop-openapi.yaml
      gcloud --project=${_PROJECT_ID} endpoints services deploy dev-whereami-openapi.yaml
- name: "gcr.io/cloud-builders/gcloud"
  id: "01-infra-apps-cloud-endpoints-dns-prod"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      while [[ $(gcloud --project ${_PROJECT_ID} anthos config controller describe config-controller --location=$${KCC_REGION} --format='value(state)') != "RUNNING" ]]; do
        echo "Waiting for config controller cluster to be RUNNING."
        sleep 5
      done
      gcloud anthos config controller get-credentials config-controller --location=$${KCC_REGION} --project=${_PROJECT_ID}
      kubectl -n config-control wait computefirewall allow-all-10 --for=condition=Ready
      kubectl -n config-control wait computeaddress prod-mci --for=condition=Ready
      export PROD_MCI_GCLB_IP=$(kubectl -n config-control get computeaddress prod-mci -ojsonpath={'.spec.address'})
      echo -e "PROD_MCI_GCLB_IP is $${PROD_MCI_GCLB_IP}"
      cat <<EOF > bank-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${BANK_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${BANK_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${PROD_MCI_GCLB_IP}"
      EOF
      cat <<EOF > shop-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${SHOP_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${SHOP_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${PROD_MCI_GCLB_IP}"
      EOF
      cat <<EOF > whereami-openapi.yaml
      swagger: "2.0"
      info:
        description: "Cloud Endpoints DNS"
        title: "Cloud Endpoints DNS"
        version: "1.0.0"
      paths: {}
      host: "$${WHEREAMI_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
      x-google-endpoints:
      - name: "$${WHEREAMI_APP_NAME}.endpoints.${_PROJECT_ID}.cloud.goog"
        target: "$${PROD_MCI_GCLB_IP}"
      EOF
      gcloud --project=${_PROJECT_ID} endpoints services deploy bank-openapi.yaml
      gcloud --project=${_PROJECT_ID} endpoints services deploy shop-openapi.yaml
      gcloud --project=${_PROJECT_ID} endpoints services deploy whereami-openapi.yaml

