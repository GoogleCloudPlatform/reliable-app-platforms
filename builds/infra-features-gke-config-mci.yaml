# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-features-gke-config-mci
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# # Enable Multicluster Ingress
# # Docs:
# # 1. Enabling multi-cluster Gateways -> https://cloud.google.com/kubernetes-engine/docs/how-to/enabling-multi-cluster-gateways
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-config-mci"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      export PROJECT_NUMBER=$(gcloud projects describe ${_PROJECT_ID} --format 'value(projectNumber)')
      echo -e "PROJECT_NUMBER is $${PROJECT_NUMBER}"
      gcloud container fleet ingress enable \
        --config-membership=projects/${_PROJECT_ID}/locations/global/memberships/$${GKE_CONFIG_NAME} \
        --project=${_PROJECT_ID}
      gcloud container fleet ingress describe --project=${_PROJECT_ID}
      gcloud projects add-iam-policy-binding ${_PROJECT_ID} \
        --member "serviceAccount:service-$${PROJECT_NUMBER}@gcp-sa-multiclusteringress.iam.gserviceaccount.com" \
        --role "roles/container.admin" \
        --project=${_PROJECT_ID}
      gcloud projects add-iam-policy-binding ${_PROJECT_ID} \
        --member "serviceAccount:service-$${PROJECT_NUMBER}@gcp-sa-multiclusteringress.iam.gserviceaccount.com" \
        --role "roles/serviceusage.serviceUsageConsumer" \
        --project=${_PROJECT_ID}
      while [[ $(gcloud container clusters describe $${GKE_CONFIG_NAME} --zone $${GKE_CONFIG_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_CONFIG_NAME} cluster to be RUNNING."
        sleep 5
      done
      gcloud container clusters get-credentials $${GKE_CONFIG_NAME} --zone $${GKE_CONFIG_LOCATION} --project ${_PROJECT_ID}
      kubectl get gatewayclasses
