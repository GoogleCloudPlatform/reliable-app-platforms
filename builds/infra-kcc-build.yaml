# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-kcc-build
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# Enable APIs
- name: "gcr.io/cloud-builders/gcloud"
  id: "enable-apis"
  entrypoint: bash
  args:
    - -c
    - |
      gcloud services enable \
      container.googleapis.com \
      krmapihosting.googleapis.com \
      cloudresourcemanager.googleapis.com \
      servicemanagement.googleapis.com \
      artifactregistry.googleapis.com \
      sourcerepo.googleapis.com \
      anthos.googleapis.com \
      gkehub.googleapis.com \
      multiclusteringress.googleapis.com \
      multiclusterservicediscovery.googleapis.com \
      trafficdirector.googleapis.com \
      mesh.googleapis.com \
      meshca.googleapis.com \
      clouddeploy.googleapis.com \
      spanner.googleapis.com \
      sqladmin.googleapis.com \
      containersecurity.googleapis.com \
      binaryauthorization.googleapis.com \
      --project=${_PROJECT_ID}
      until [[ $(gcloud services list --enabled --format='value(config.name)' --filter="name:krmapihosting.googleapis.com") == "krmapihosting.googleapis.com" ]]; do 
        gcloud services enable krmapihosting.googleapis.com; 
        sleep 5; 
      done
# Create Config Controller ~15mins
# Docs:
# 1. Set up Config Controller -> https://cloud.google.com/anthos-config-management/docs/how-to/config-controller-setup
- name: "gcr.io/cloud-builders/gcloud"
  id: "config-controller-create"
  entrypoint: bash
  dir: "infra"
  args:
    - -c
    - |
      source vars.sh
      [[ $(gcloud anthos config controller list --location=$${KCC_REGION} --format='value(name)') ]] && exit 0
      gcloud anthos config controller create config-controller \
      --location=$${KCC_REGION} \
      --project=${_PROJECT_ID}
# Config controller permissions
# Docs:
# 1. Set up Config Controller -> https://cloud.google.com/anthos-config-management/docs/how-to/config-controller-setup
- name: "gcr.io/cloud-builders/gcloud"
  id: "config-controller-permissions"
  entrypoint: bash
  dir: "infra"
  args:
    - -c
    - |
      source vars.sh
      while [[ $(gcloud --project ${_PROJECT_ID} anthos config controller describe config-controller --location=$${KCC_REGION} --format='value(state)') != "RUNNING" ]]; do
        echo "Waiting for config controller cluster to be RUNNING."
        sleep 5
      done
      gcloud anthos config controller get-credentials config-controller --location=$${KCC_REGION} --project=${_PROJECT_ID}
      gcloud projects add-iam-policy-binding "${PROJECT_ID}" \
      --member "serviceAccount:$(kubectl get ConfigConnectorContext -n config-control -o jsonpath='{.items[0].spec.googleServiceAccount}')" \
      --role "roles/owner" \
      --project "${PROJECT_ID}"
