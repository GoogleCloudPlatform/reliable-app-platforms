# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-app-whereami-dev
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# Confirm test app `whereami` install on GKE Dev clusters
# Docs:
# 1. Whereami Github repo -> https://github.com/theemadnes/gke-whereami
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-app-whereami-dev"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/linux_amd64/nomos nomos
      chmod +x nomos
      touch konfig
      export KUBECONFIG=konfig
      while [[ $(gcloud container clusters list --project ${_PROJECT_ID} --filter "STATUS=RUNNING AND resourceLabels.env:dev" --format="value(name)"| wc -l | awk '{print $1}') != "6" ]]; do
        echo "Waiting for all dev the cluster to be RUNNING."
        sleep 5
      done
      gcloud container clusters get-credentials $${GKE_DEV1_NAME} --zone $${GKE_DEV1_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV2_NAME} --zone $${GKE_DEV2_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV3_NAME} --zone $${GKE_DEV3_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV4_NAME} --zone $${GKE_DEV4_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV5_NAME} --zone $${GKE_DEV5_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV6_NAME} --zone $${GKE_DEV6_LOCATION} --project ${_PROJECT_ID}
      export DEV1_NOMOS_STATUS=0
      until [[ $$DEV1_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV1_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV1_LOCATION}_$${GKE_DEV1_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV1_NOMOS_STATUS is $$DEV1_NOMOS_STATUS"
        sleep 5
      done
      export DEV2_NOMOS_STATUS=0
      until [[ $$DEV2_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV2_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV2_LOCATION}_$${GKE_DEV2_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV2_NOMOS_STATUS is $$DEV2_NOMOS_STATUS"
        sleep 5
      done
      export DEV3_NOMOS_STATUS=0
      until [[ $$DEV3_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV3_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV3_LOCATION}_$${GKE_DEV3_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV3_NOMOS_STATUS is $$DEV3_NOMOS_STATUS"
        sleep 5
      done
      export DEV4_NOMOS_STATUS=0
      until [[ $$DEV4_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV4_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV4_LOCATION}_$${GKE_DEV4_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV4_NOMOS_STATUS is $$DEV4_NOMOS_STATUS"
        sleep 5
      done
      export DEV5_NOMOS_STATUS=0
      until [[ $$DEV5_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV5_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV5_LOCATION}_$${GKE_DEV5_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV5_NOMOS_STATUS is $$DEV5_NOMOS_STATUS"
        sleep 5
      done
      export DEV6_NOMOS_STATUS=0
      until [[ $$DEV6_NOMOS_STATUS == "SYNCED" ]]
      do
        export DEV6_NOMOS_STATUS=$(./nomos status --contexts gke_${_PROJECT_ID}_$${GKE_DEV6_LOCATION}_$${GKE_DEV6_NAME} | sed -n 6p | awk '{print $1;}')
        echo -e "DEV6_NOMOS_STATUS is $$DEV6_NOMOS_STATUS"
        sleep 5
      done
      for CTX in gke_${_PROJECT_ID}_$${GKE_DEV1_LOCATION}_$${GKE_DEV1_NAME} gke_${_PROJECT_ID}_$${GKE_DEV2_LOCATION}_$${GKE_DEV2_NAME} gke_${_PROJECT_ID}_$${GKE_DEV3_LOCATION}_$${GKE_DEV3_NAME} gke_${_PROJECT_ID}_$${GKE_DEV4_LOCATION}_$${GKE_DEV4_NAME} gke_${_PROJECT_ID}_$${GKE_DEV5_LOCATION}_$${GKE_DEV5_NAME} gke_${_PROJECT_ID}_$${GKE_DEV6_LOCATION}_$${GKE_DEV6_NAME}
      do
        echo -e "Checking whereami status for $$CTX..."
        kubectl --context=$$CTX wait --for=condition=Available deployment whereami-frontend -n whereami-dev --timeout 5m
        kubectl --context=$$CTX wait --for=condition=Available deployment whereami-backend -n whereami-dev --timeout 5m
      done