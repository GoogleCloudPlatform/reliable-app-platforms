# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

timeout: 7200s # 2hr
tags:
  - infra-app-whereami-multicluster-dev
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# ASM test multicluster connectivity on GKE Dev
# Docs:
# 1. Secure Multicluster Ingress Gitlab Repo -> https://gitlab.com/asm7/secure-multicluster-ingress#verifying-multicluster-service-discovery-and-routing-east-west-connectivity
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-app-whereami-multicluster-dev"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      curl -L https://github.com/stedolan/jq/releases/download/jq-1.6/jq-linux64 -o jq
      chmod +x jq
      export JQ_CMD=$$PWD/jq
      $$JQ_CMD --version
      curl -LO https://storage.googleapis.com/gke-release/asm/istio-$${ASM_VERSION}-linux-amd64.tar.gz
      tar xzf istio-$${ASM_VERSION}-linux-amd64.tar.gz
      export ISTIOCTL_CMD=`pwd`/istio-$${ASM_VERSION}/bin/istioctl
      touch konfig
      export KUBECONFIG=konfig
      while [[ $(gcloud container clusters list --project ${_PROJECT_ID} --filter "STATUS=RUNNING AND resourceLabels.env:dev" --format="value(name)"| wc -l | awk '{print $1}') != "6" ]]; do
        echo "Waiting for all dev the cluster to be RUNNING."
        sleep 5
      done
      gcloud container clusters get-credentials $${GKE_DEV1_NAME} --zone $${GKE_DEV1_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV2_NAME} --zone $${GKE_DEV2_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV3_NAME} --zone $${GKE_DEV3_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV4_NAME} --zone $${GKE_DEV4_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV5_NAME} --zone $${GKE_DEV5_LOCATION} --project ${_PROJECT_ID}
      gcloud container clusters get-credentials $${GKE_DEV6_NAME} --zone $${GKE_DEV6_LOCATION} --project ${_PROJECT_ID}
      export CLUSTER_1=gke_${_PROJECT_ID}_$${GKE_DEV1_LOCATION}_$${GKE_DEV1_NAME}
      export CLUSTER_2=gke_${_PROJECT_ID}_$${GKE_DEV2_LOCATION}_$${GKE_DEV2_NAME}
      export CLUSTER_3=gke_${_PROJECT_ID}_$${GKE_DEV3_LOCATION}_$${GKE_DEV3_NAME}
      export CLUSTER_4=gke_${_PROJECT_ID}_$${GKE_DEV4_LOCATION}_$${GKE_DEV4_NAME}
      export CLUSTER_5=gke_${_PROJECT_ID}_$${GKE_DEV5_LOCATION}_$${GKE_DEV5_NAME}
      export CLUSTER_6=gke_${_PROJECT_ID}_$${GKE_DEV6_LOCATION}_$${GKE_DEV6_NAME}
      for CLUSTER in $${CLUSTER_1} $${CLUSTER_2} $${CLUSTER_3} $${CLUSTER_4} $${CLUSTER_5} $${CLUSTER_6}
      do
        echo -e "\e[1;92mTesting connectivity from $$CLUSTER to all other clusters...\e[0m"
        echo -e "\e[96mDeploying curl utility in $$CLUSTER cluster...\e[0m"
        kubectl --context=$${CLUSTER} -n whereami-dev apply -f https://raw.githubusercontent.com/istio/istio/master/samples/sleep/sleep.yaml
        kubectl --context=$${CLUSTER} -n whereami-dev wait --for=condition=available deployment sleep --timeout=5m
        for CLUSTER_ZONE in $${GKE_DEV1_LOCATION} $${GKE_DEV2_LOCATION} $${GKE_DEV3_LOCATION} $${GKE_DEV4_LOCATION} $${GKE_DEV5_LOCATION} $${GKE_DEV6_LOCATION}
        do
          echo -e "\e[92mTesting connectivity from $$CLUSTER to $$CLUSTER_ZONE...\e[0m"
          SLEEP_POD=`kubectl --context=$${CLUSTER} -n whereami-dev get pod -l app=sleep  -o jsonpath='{.items[0].metadata.name}'`
          echo -e "\e[92mProxy config from $${CLUSTER} sleep pod...\e[0m"
          $${ISTIOCTL_CMD} --context $${CLUSTER} -n whereami-dev pc ep $${SLEEP_POD} | grep whereami-frontend.whereami-dev
          echo -e "\e[92mProxy config from $${CLUSTER} sleep pod - number of rows...\e[0m"
          $${ISTIOCTL_CMD} --context $${CLUSTER} -n whereami-dev pc ep $${SLEEP_POD} | grep whereami-frontend.whereami-dev | wc -l
          ZONE=location
          while [ "$$ZONE" != "$$CLUSTER_ZONE" ]
          do
            ZONE=`kubectl --context=$${CLUSTER} -n whereami-dev exec -i -n whereami-dev -c sleep $$SLEEP_POD -- curl -s whereami-frontend.whereami-dev:80 | $$JQ_CMD -r '.zone'`
          done
          echo -e "\e[96m$$CLUSTER can access $$CLUSTER_ZONE\e[0m"
        done
        echo -e "\n"
      done
