apiVersion: v1
kind: Namespace
metadata:
  name: whereami-dev
  labels:
    istio.io/rev: asm-managed
  annotations:
    mesh.cloud.google.com/proxy: '{"managed":"true"}'
    configmanagement.gke.io/cluster-selector: "g-d"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: whereami-frontend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-ksa-frontend
  namespace: whereami-dev
---
apiVersion: v1
data:
  BACKEND_ENABLED: "True"
  BACKEND_SERVICE: http://whereami-backend
  ECHO_HEADERS: "False"
  GRPC_ENABLED: "False"
  METADATA: frontend
kind: ConfigMap
metadata:
  labels:
    app: whereami-frontend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-configmap-frontend
  namespace: whereami-dev
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: whereami-frontend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-frontend
  namespace: whereami-dev
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: whereami-frontend
  type: ClusterIP
---
kind: ServiceExport
apiVersion: net.gke.io/v1
metadata:
  name: whereami-frontend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  namespace: whereami-dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: whereami-frontend
  name: whereami-frontend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  namespace: whereami-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whereami-frontend
  template:
    metadata:
      labels:
        app: whereami-frontend
        version: v1
    spec:
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: BACKEND_ENABLED
          valueFrom:
            configMapKeyRef:
              key: BACKEND_ENABLED
              name: whereami-configmap-frontend
        - name: BACKEND_SERVICE
          valueFrom:
            configMapKeyRef:
              key: BACKEND_SERVICE
              name: whereami-configmap-frontend
        - name: METADATA
          valueFrom:
            configMapKeyRef:
              key: METADATA
              name: whereami-configmap-frontend
        - name: ECHO_HEADERS
          valueFrom:
            configMapKeyRef:
              key: ECHO_HEADERS
              name: whereami-configmap-frontend
        - name: GRPC_ENABLED
          valueFrom:
            configMapKeyRef:
              key: GRPC_ENABLED
              name: whereami-configmap-frontend
        image: gcr.io/google-samples/whereami:v1.2.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        name: whereami
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
      serviceAccountName: whereami-ksa-frontend
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app: whereami-backend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-ksa-backend
  namespace: whereami-dev
---
apiVersion: v1
data:
  BACKEND_ENABLED: "False"
  BACKEND_SERVICE: http://whereami-backend
  ECHO_HEADERS: "False"
  GRPC_ENABLED: "False"
  METADATA: backend
kind: ConfigMap
metadata:
  labels:
    app: whereami-backend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-configmap-backend
  namespace: whereami-dev
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: whereami-backend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  name: whereami-backend
  namespace: whereami-dev
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: whereami-backend
  type: ClusterIP
---
kind: ServiceExport
apiVersion: net.gke.io/v1
metadata:
  name: whereami-backend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  namespace: whereami-dev
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: whereami-backend
  name: whereami-backend
  annotations:
    configmanagement.gke.io/cluster-selector: "g-d"
  namespace: whereami-dev
spec:
  replicas: 1
  selector:
    matchLabels:
      app: whereami-backend
  template:
    metadata:
      labels:
        app: whereami-backend
        version: v1
    spec:
      containers:
      - env:
        - name: NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: POD_SERVICE_ACCOUNT
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: BACKEND_ENABLED
          valueFrom:
            configMapKeyRef:
              key: BACKEND_ENABLED
              name: whereami-configmap-backend
        - name: BACKEND_SERVICE
          valueFrom:
            configMapKeyRef:
              key: BACKEND_SERVICE
              name: whereami-configmap-backend
        - name: METADATA
          valueFrom:
            configMapKeyRef:
              key: METADATA
              name: whereami-configmap-backend
        - name: ECHO_HEADERS
          valueFrom:
            configMapKeyRef:
              key: ECHO_HEADERS
              name: whereami-configmap-backend
        - name: GRPC_ENABLED
          valueFrom:
            configMapKeyRef:
              key: GRPC_ENABLED
              name: whereami-configmap-backend
        image: gcr.io/google-samples/whereami:v1.2.4
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 15
          timeoutSeconds: 5
        name: whereami
        ports:
        - containerPort: 8080
          name: http
        readinessProbe:
          httpGet:
            path: /healthz
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 5
          timeoutSeconds: 1
      serviceAccountName: whereami-ksa-backend
