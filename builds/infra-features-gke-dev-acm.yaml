# Copyright 2022 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Notes: Sept 13th 2022: Due to the following error, I am choosing to use the manual install method:
# ERROR: (gcloud.beta.container.hub.config-management.apply) ABORTED: unable to queue the operation
# The docs for manual install at: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl

timeout: 7200s # 2hr
tags:
  - infra-features-gke-dev-acm
substitutions:
  _PROJECT_ID: ${PROJECT_ID}
steps:
# Install ACM ConfigSync GKE Dev1
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev1-acm"
  dir: "infra"
  entrypoint: bash
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev1.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV1_NAME} --zone $${GKE_DEV1_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV1_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev1-acm-konfig && export KUBECONFIG=gke-dev1-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV1_NAME} --zone $${GKE_DEV1_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev1-acm-konfig apply -f config-management-operator-dev1.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV1_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev1.yaml
      kubectl --kubeconfig=gke-dev1-acm-konfig apply -f acm/config-management-dev1.yaml
      until kubectl --kubeconfig=gke-dev1-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev1-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev1-acm-konfig apply -f acm/root-sync.yaml
# - name: "gcr.io/cloud-builders/gcloud"
#   id: "infra-features-gke-dev1-acm-using-hub-api"
#   dir: "infra"
#   entrypoint: bash
#   args:
#     - -c
#     - |
#       source vars.sh
#       sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/apply-spec.yaml_tmpl > acm/apply-spec.yaml
#       gcloud beta container hub config-management apply \
#         --membership=$${GKE_DEV1_NAME} \
#         --config=acm/apply-spec.yaml \
#         --project=${_PROJECT_ID}
# Install ACM ConfigSync GKE Dev2
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev2-acm"
  dir: "infra"
  entrypoint: bash
  waitFor: ['-']
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev2.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV2_NAME} --zone $${GKE_DEV2_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV2_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev2-acm-konfig && export KUBECONFIG=gke-dev2-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV2_NAME} --zone $${GKE_DEV2_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev2-acm-konfig apply -f config-management-operator-dev2.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV2_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev2.yaml
      kubectl --kubeconfig=gke-dev2-acm-konfig apply -f acm/config-management-dev2.yaml
      until kubectl --kubeconfig=gke-dev2-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev2-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev2-acm-konfig apply -f acm/root-sync.yaml
# Install ACM ConfigSync GKE Dev3
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev3-acm"
  dir: "infra"
  entrypoint: bash
  waitFor: ['-']
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev3.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV3_NAME} --zone $${GKE_DEV3_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV3_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev3-acm-konfig && export KUBECONFIG=gke-dev3-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV3_NAME} --zone $${GKE_DEV3_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev3-acm-konfig apply -f config-management-operator-dev3.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV3_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev3.yaml
      kubectl --kubeconfig=gke-dev3-acm-konfig apply -f acm/config-management-dev3.yaml
      until kubectl --kubeconfig=gke-dev3-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev3-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev3-acm-konfig apply -f acm/root-sync.yaml
# Install ACM ConfigSync GKE Dev4
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev4-acm"
  dir: "infra"
  entrypoint: bash
  waitFor: ['-']
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev4.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV4_NAME} --zone $${GKE_DEV4_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV4_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev4-acm-konfig && export KUBECONFIG=gke-dev4-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV4_NAME} --zone $${GKE_DEV4_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev4-acm-konfig apply -f config-management-operator-dev4.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV4_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev4.yaml
      kubectl --kubeconfig=gke-dev4-acm-konfig apply -f acm/config-management-dev4.yaml
      until kubectl --kubeconfig=gke-dev4-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev4-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev4-acm-konfig apply -f acm/root-sync.yaml
# Install ACM ConfigSync GKE Dev5
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev5-acm"
  dir: "infra"
  entrypoint: bash
  waitFor: ['-']
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev5.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV5_NAME} --zone $${GKE_DEV5_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV5_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev5-acm-konfig && export KUBECONFIG=gke-dev5-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV5_NAME} --zone $${GKE_DEV5_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev5-acm-konfig apply -f config-management-operator-dev5.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV5_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev5.yaml
      kubectl --kubeconfig=gke-dev5-acm-konfig apply -f acm/config-management-dev5.yaml
      until kubectl --kubeconfig=gke-dev5-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev5-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev5-acm-konfig apply -f acm/root-sync.yaml
# Install ACM ConfigSync GKE Dev6
# Docs:
# 1. Install Config Sync -> https://cloud.google.com/anthos-config-management/docs/how-to/installing-config-sync#google-service-account
# 2. Manual Install Config Sync: https://cloud.google.com/anthos-config-management/docs/how-to/installing-kubectl
- name: "gcr.io/cloud-builders/gcloud"
  id: "infra-features-gke-dev6-acm"
  dir: "infra"
  entrypoint: bash
  waitFor: ['-']
  args:
    - -c
    - |
      source vars.sh
      gsutil cp gs://config-management-release/released/latest/config-management-operator.yaml config-management-operator-dev6.yaml
      while [[ $(gcloud container clusters describe $${GKE_DEV6_NAME} --zone $${GKE_DEV6_LOCATION} --project ${_PROJECT_ID} --format="value(status)") != "RUNNING" ]]; do
        echo "Waiting for $${GKE_DEV6_NAME} cluster to be RUNNING."
        sleep 5
      done
      touch gke-dev6-acm-konfig && export KUBECONFIG=gke-dev6-acm-konfig && \
      gcloud container clusters get-credentials $${GKE_DEV6_NAME} --zone $${GKE_DEV6_LOCATION} --project ${_PROJECT_ID}
      kubectl --kubeconfig=gke-dev6-acm-konfig apply -f config-management-operator-dev6.yaml
      sed -e "s/CLUSTER_NAME/$${GKE_DEV6_NAME}/" acm/config-management-cluster.yaml > acm/config-management-dev6.yaml
      kubectl --kubeconfig=gke-dev6-acm-konfig apply -f acm/config-management-dev6.yaml
      until kubectl --kubeconfig=gke-dev6-acm-konfig get customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io; do date; sleep 1; echo ""; done
      kubectl --kubeconfig=gke-dev6-acm-konfig wait --for=condition=established customresourcedefinitions rootsyncs.configsync.gke.io reposyncs.configsync.gke.io --timeout 5m
      sed -e 's/PROJECT_ID/${_PROJECT_ID}/' acm/root-sync.yaml_tmpl > acm/root-sync.yaml
      kubectl --kubeconfig=gke-dev6-acm-konfig apply -f acm/root-sync.yaml